<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="fakestore-products-prc-api-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="get:\health:fakestore-products-prc-api-config-400-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Call APIKit Router" doc:id="9d4aa140-f2f6-44b8-8046-aaf39fc86c24" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId='#["APIKIT:BAD_REQUEST"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="52c651fc-d5a1-4fb2-96a9-2d534546f1d3" >
				<flow-ref doc:name="Flow Reference" doc:id="b244a554-f06d-40d8-b10d-d23fb0ae6aa7" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="b5bdab11-e566-410f-81a0-64331898b12d" >
						<logger level="INFO" doc:name="Logger" doc:id="398b2893-3847-4549-a040-a589e4d38aa1" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="ec25a926-32e6-46d0-a511-48767caa2882" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="fd308f2c-f04f-443b-b9ca-042ae59e2b44" >
				<flow-ref doc:name="Flow Reference" doc:id="72bdb266-8d9e-418d-8937-a2b0f13f49fb" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="4d4233c0-ea9d-4b80-8d09-872fbe3f22e1" >
						<logger level="INFO" doc:name="Logger" doc:id="a0ca8125-1154-4748-9d6c-0a44b2f2da62" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-405-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-405-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="6d3d53a0-7fe7-4c01-a571-45b0632af5d1" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="68bf7d41-de8c-41df-a753-d8e6c8d8f497" >
				<flow-ref doc:name="Flow Reference" doc:id="e11fc828-a4e6-4c94-bbd1-0a0ceebb5c11" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="98a3029b-d935-40d8-8a8c-a8d8c20c04e0" >
						<logger level="INFO" doc:name="Logger" doc:id="6d6666b0-a127-441c-9004-6a9fd0837f23" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(405)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 405" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-406-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-406-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="324ad3d5-71fb-47ea-a8b1-c3831c9a5ea6" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="12dd1330-76d4-48a0-936b-5f18968c6444" >
				<flow-ref doc:name="Flow Reference" doc:id="482d82da-5376-4eef-9c1e-6f353808b323" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="8f027f77-d1ed-4ca5-a22e-093b06522b85" >
						<logger level="INFO" doc:name="Logger" doc:id="15f04509-755f-4578-963e-f409b828225f" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(406)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 406" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-415-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-415-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Call APIKit Router" doc:id="13ecff2f-1bb8-4bfd-8b17-1eea661d3ef1" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="2af9cf3a-2c48-46e7-8970-840ad1565d0b" >
				<flow-ref doc:name="Flow Reference" doc:id="df47f046-11e5-4754-b574-3f38ddb0396c" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="54f82d30-c6d1-4469-a239-a6dbbc87281e" >
						<logger level="INFO" doc:name="Logger" doc:id="0a0f3440-d51d-4d95-b31e-7b265e6ccd85" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert That Status Code is 415" doc:id="7eff139e-748d-4728-bd18-cb646c1901e5" message="The HTTP Status code is not correct!" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(415)]" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-500-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-500-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="6079062d-0247-405c-a400-63065539645d" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="d251386d-d500-43ce-a5bf-65d7b02f27ed" >
				<flow-ref doc:name="Flow Reference" doc:id="942cccb4-e257-4f0b-90b5-297dc11500da" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d08da441-1605-41c9-aae4-3981a8fded6d" >
						<logger level="INFO" doc:name="Logger" doc:id="75bb14b5-f597-403a-b164-958d72792d36" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-501-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-501-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="bb496bd5-d3d3-4bd4-bb83-1b1e7f2de54e" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="fe149adf-8caa-49c0-a7f2-16d769df5ad1" >
				<flow-ref doc:name="Flow Reference" doc:id="5b79c673-c8ed-4438-a8ad-6be0f63a12bd" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d1c5f7b3-e746-473c-afce-1b0f4db85ef0" >
						<logger level="INFO" doc:name="Logger" doc:id="85eb985f-5332-4192-b56d-9ebe8b4529a8" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(501)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 501" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-503-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-503-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="275495c2-71ed-4387-b48b-a2bf95dc1dff" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:SERVICE_UNAVAILABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="ff51dd28-480f-4509-9464-02a8ca92fb95" >
				<flow-ref doc:name="Flow Reference" doc:id="34d38ae5-8181-4fef-8ae7-1a94b14f28a5" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="f3155d0c-9d7e-4076-8ccd-65eee01178a9" >
						<logger level="INFO" doc:name="Logger" doc:id="ac69dfea-57f7-421c-88d5-8d09d0fca5eb" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(503)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 503" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-401--FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-401-]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="9f3271b7-533f-4d16-ac63-dea83fb1457e" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:UNAUTHORIZED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="860d2595-f359-4016-99ed-60dacea61ef8" >
				<flow-ref doc:name="Flow Reference" doc:id="4f1f746c-be99-4e09-a170-4307832b9938" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="1be295a5-bac0-4f4d-b89d-906aa58ecf98" >
						<logger level="INFO" doc:name="Logger" doc:id="2809c5e0-43df-4311-a334-33376ed9f8f1" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-products-prc-api-config-429--FlowTest" description="Verifying functionality of [get:\health:fakestore-products-prc-api-config-429-]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-products-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-products-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="e22eac2a-6e0d-43bc-9498-b6205bdb14bf" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-products-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:TOO_MANY_REQUESTS" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="3c08538a-07e5-4fe1-948b-6f468558cc9b" >
				<flow-ref doc:name="Flow Reference" doc:id="8250a197-cb0d-46ee-893a-f8b9db50e0fc" name="fakestore-products-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="121f0717-24fb-4dc3-8d21-f621f511128c" >
						<logger level="INFO" doc:name="Logger" doc:id="1cadbc9a-487d-4f0a-90c5-93142e81e2ea" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
        </munit:validation>
    </munit:test>
</mule>
