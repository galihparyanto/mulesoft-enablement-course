<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="fakestore-user-exp-api-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="get:\health:fakestore-user-exp-api-config-400-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="86a222ca-b281-4d35-8fbe-b7fd1c31433e" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="e490e3fe-ab04-4a93-8058-9cf8332769e0" >
				<flow-ref doc:name="Flow Reference" doc:id="7c0677e4-df78-4e92-b794-b2c34d822445" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="89ff46ce-c612-4a7d-934a-3fc3300a92e7" >
						<logger level="INFO" doc:name="Logger" doc:id="1f121faa-091c-4ba0-a3f7-103959bb9109" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 400" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="7549cc07-309e-4062-bdeb-1c7a691929dd" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="ce66cd7a-9055-4479-adac-38c4f49204ea" >
				<flow-ref doc:name="Flow Reference" doc:id="69f6783c-601a-49ec-b58a-08cb4a25ec53" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c8ef801b-438c-4684-a383-281f2c97e09e" >
						<logger level="INFO" doc:name="Logger" doc:id="bc2eca78-a810-4e6f-9bde-cc985093a183" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 404" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-405-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-405-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="0d1bbc46-13b2-4b30-982b-4c003174c362" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="4e4130bc-d800-4f84-9fcb-fc4b3c3f208b" >
				<flow-ref doc:name="Flow Reference" doc:id="bb51bc01-ebb3-49f5-883f-0fb407b3f172" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="34f64e89-323a-43ad-96b2-32e711eb202b" >
						<logger level="INFO" doc:name="Logger" doc:id="d5228673-48dc-4f19-8e2b-d2dfd67e3364" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(405)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 405" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-406-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-406-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="1c440dea-cf3d-458c-8e66-6f7a80f3e33a" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="8fc7f7f6-d33c-4f25-8587-0e8606dd1102" >
				<flow-ref doc:name="Flow Reference" doc:id="3f8993af-a8b2-4d0c-808a-90e89689145d" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="7bde00ce-beac-4191-9379-e0058f62cdbb" >
						<logger level="INFO" doc:name="Logger" doc:id="53076416-92cf-4707-8cd7-36f843f0560a" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(406)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 406" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-415-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-406-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="8033a785-c421-46f4-8016-739410af000d" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="f33f56dc-ed7c-455c-ab83-412c2d66221a" >
				<flow-ref doc:name="Flow Reference" doc:id="840876db-fcbb-47a2-86a6-fa319566517d" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="f8ff3a81-cad2-498f-84ee-0ebbab6a2573" >
						<logger level="INFO" doc:name="Logger" doc:id="46d9a6c1-de2e-40ba-91d3-a5840e57b83f" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(415)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 415" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-500-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-500-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="e7c39096-7665-4d4e-855a-fbab2b2aa3f4" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="d30dd403-4bc9-43d2-8ab4-05f478cf070b" >
				<flow-ref doc:name="Flow Reference" doc:id="713701f0-961b-4422-83e9-5dc6dbea91b4" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="83a59c59-e49b-4ab8-a353-939050d4520b" >
						<logger level="INFO" doc:name="Logger" doc:id="34f36a2f-90db-4598-a16d-3b9ca53db0ff" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 500" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-501-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-501-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="acd2e5cd-0325-4ff3-9436-5df9b13c080b" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="4a688afe-f7ae-4962-b8e3-1ab8e178feab" >
				<flow-ref doc:name="Flow Reference" doc:id="ae6b5edc-4c03-485f-82f8-588c40a87470" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="dcdd2898-c31b-4f35-8889-03bbbf5087f5" >
						<logger level="INFO" doc:name="Logger" doc:id="8bf9c334-92fc-494d-9485-fa2b7ab075d6" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(501)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 501" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-503-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-503-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="4e03414e-ee62-44a3-bb54-4bf7c63fb6a7" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:SERVICE_UNAVAILABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="128e2bf7-acff-4fc0-a85c-88e80e525c1a" >
				<flow-ref doc:name="Flow Reference" doc:id="9920c8f2-84d4-4ada-8210-fce5a022163f" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="2f0476b7-bfe8-474e-8756-d4ac28eb5ab4" >
						<logger level="INFO" doc:name="Logger" doc:id="f9786672-6e94-44a5-9285-7114f76128f5" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(503)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 503" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-401--FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-401-]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="785aff96-34f5-49f4-a374-8c6c70ef3284" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:UNAUTHORIZED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="1cc82cbb-0be3-4498-84c2-2de834e20afb" >
				<flow-ref doc:name="Flow Reference" doc:id="0d1ec69b-3599-4079-a161-a2a85260c662" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="5a121ba3-2ab2-41a4-a13a-e58f8daf1ba9" >
						<logger level="INFO" doc:name="Logger" doc:id="ee3b67d3-9c33-44ee-8a3a-3a53bd133066" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 401" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-user-exp-api-config-429--FlowTest" description="Verifying functionality of [get:\health:fakestore-user-exp-api-config-429-]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-user-exp-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-user-exp-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="34401664-f5b9-40fa-931f-31e0b93e9036" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-user-exp-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:TOO_MANY_REQUESTS" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="934854e1-9581-4075-8698-76d55cf153a6" >
				<flow-ref doc:name="Flow Reference" doc:id="924346f1-9441-486f-a50a-b7ef30384a1c" name="fakestore-user-exp-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c58f7286-f685-4c0c-966b-21af93f514e0" >
						<logger level="INFO" doc:name="Logger" doc:id="b49e7620-9925-47a9-b42a-a997eef0e110" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert that httpStatus is 429" />
        </munit:validation>
    </munit:test>
</mule>
