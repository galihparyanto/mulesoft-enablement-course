<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="fakestore-carts-prc-api-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-400-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="bc0d9b85-e409-4fef-9be0-6b04eab8c561" processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="c6450d0a-4791-471f-a1f6-ce356bb0e3ae" >
				<flow-ref doc:name="Flow Reference" doc:id="93ca9777-1c05-477a-93e7-997835784700" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="386b3024-b549-4ada-9761-633ec8ea4f1d" >
						<logger level="INFO" doc:name="Logger" doc:id="02a81b6d-15e3-4110-a124-badf2eb131e3" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
        </munit:validation>
    </munit:test>
	<munit:test name="get:\health:fakestore-carts-prc-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="15fba767-6646-4b02-a272-4a9fe94eddbd" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="091e54c0-8cb4-40cb-8b85-8970d026c935" >
				<flow-ref doc:name="Flow Reference" doc:id="fdaa6e9e-8ece-41c2-b806-9fb7b9dd8cdf" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="359b5928-c13b-4830-be0b-ab201f965ddc" >
						<logger level="INFO" doc:name="Logger" doc:id="f1896705-0ec0-4883-8994-cef2278bafa3" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-405-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-405-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="42f737fe-5504-4013-978b-6c23c1d1d9ce" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="be2fc1a0-381a-4a27-9453-7a3437e86370" >
				<flow-ref doc:name="Flow Reference" doc:id="34ebe92c-9818-403d-a25d-9857124c784c" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="cbbe0c4e-f3c2-4b3e-b8e8-da2904272f3f" >
						<logger level="INFO" doc:name="Logger" doc:id="9e696d5b-507b-4408-ad9b-17f616d0b345" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(405)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 405" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-406-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-406-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="ac73e14b-43ea-4d56-9a3a-34d649873970" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="4f2c1c40-a24f-43d9-a01f-510b85adc9bd" >
				<flow-ref doc:name="Flow Reference" doc:id="1a3b1692-74a6-47f2-a984-83db7aa720cb" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d9d6248a-6543-4256-a45f-fb0f164e174c" >
						<logger level="INFO" doc:name="Logger" doc:id="585f4e50-8b59-420b-b2ae-a4c60f43513b" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(406)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 406" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-415-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-415-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="436a2b25-a296-41dc-87e0-7f894c2c82ca" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="f138e89c-5d94-42c9-84cc-d782920507bd" >
				<flow-ref doc:name="Flow Reference" doc:id="c6eb582e-cf7d-4659-a223-6ee4e072e612" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="fe90a115-57a7-4d08-ae9c-3aec005b77eb" >
						<logger level="INFO" doc:name="Logger" doc:id="3fe06230-bb68-400e-af96-82d7d9947c87" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(415)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 415" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-500-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-500-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="ff8fcd77-e300-48f6-b9a7-1a69ae530be8" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="4bd4552c-8c68-4b17-b0dd-278387e763b1" >
				<flow-ref doc:name="Flow Reference" doc:id="8c9f4045-d5c5-4d1e-839f-dc2e77781aee" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="b58ad79d-6115-4cd6-b77d-f0860ed13536" >
						<logger level="INFO" doc:name="Logger" doc:id="62591cce-ed16-4cb4-bcbc-993919dbbdef" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-501-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-501-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="1d7d9a9e-74e7-4c73-b3c5-974175924e84" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="59ef6e88-fc31-47b2-a7fc-4568c055ac4f" >
				<flow-ref doc:name="Flow Reference" doc:id="ab332332-ff99-4e16-bb5e-98ede67887c9" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="9532e03b-014d-4e75-af70-b221e804c70a" >
						<logger level="INFO" doc:name="Logger" doc:id="c8ab2e5b-feeb-4ae9-b726-77314539978a" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(501)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 501" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-503-application\json-FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-503-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="71fbaba7-63b0-41b8-a3e8-99b74113b6c6" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:SERVICE_UNAVAILABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="f0a7df0c-a680-4d22-a2d6-772477dc57d7" >
				<flow-ref doc:name="Flow Reference" doc:id="148f6233-c992-42c0-ac51-61d375170851" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="819601db-96ab-47d1-aa3d-bae36e847b63" >
						<logger level="INFO" doc:name="Logger" doc:id="aa7f2cd5-38af-4b4b-acbb-193045efd697" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(503)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 503" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-401--FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-401-]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="9effa602-5c62-438a-af51-edcb3897104b" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:UNAUTHORIZED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="41cea03b-17ba-463e-a0fd-e77e6a3ef0fe" >
				<flow-ref doc:name="Flow Reference" doc:id="a81332c6-9787-4adf-98d9-5069f96ab27d" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="6971afb9-0fb3-444b-a77f-b1d3fbc13ac6" >
						<logger level="INFO" doc:name="Logger" doc:id="d51b251e-3ff0-44f9-a76b-94ee6b8f665e" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\health:fakestore-carts-prc-api-config-429--FlowTest" description="Verifying functionality of [get:\health:fakestore-carts-prc-api-config-429-]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="fakestore-carts-prc-api-main" />
            <munit:enable-flow-source value="get:\health:fakestore-carts-prc-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="7fb9eb4d-ded4-4d70-bf54-3d5fc3d990b7" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fakestore-carts-prc-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:TOO_MANY_REQUESTS" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
        <munit:execution>
			<try doc:name="Try" doc:id="fad8cd21-e83d-46f2-97c4-3d79429d4bc2" >
				<flow-ref doc:name="Flow Reference" doc:id="ef740f5b-1f9b-4ec6-87e3-82efbdfcc521" name="fakestore-carts-prc-api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="756c604a-6ccc-46d2-8a1b-fe120400e24e" >
						<logger level="INFO" doc:name="Logger" doc:id="e5ac67bb-2e69-4ec7-a6db-c5321320a4b4" message='#["An error occurred"]' />
					</on-error-continue>
				</error-handler>
			</try>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
        </munit:validation>
    </munit:test>
</mule>
