<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:fakestore-db-sys-api="http://www.mulesoft.org/schema/mule/fakestore-db-sys-api"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/fakestore-db-sys-api http://www.mulesoft.org/schema/mule/fakestore-db-sys-api/current/mule-fakestore-db-sys-api.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<flow name="checkout-carts-flow" doc:id="4ffe17c9-3779-4d40-aa6a-5ac9fbfd38d2" >
		<logger level="INFO" doc:name="INFO Start Logger" doc:id="e344008d-1745-4ff2-ae01-a1da19bbe8de" message='#["Start calling checkout cart transaction"]'/>
		<flow-ref doc:name="get-all-products-subflow" doc:id="ed36dc82-ab51-4b39-903c-def5a3e6ee63" name="get-all-products-subflow"/>
		<ee:transform doc:name="Set Payload" doc:id="502220ef-ab8c-43ec-807d-00910614e6bb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
[payload] map (cItem, cIndex) -> {
	"id": uuid(),
    "cartId": cItem.id,
    "userId": cItem.userId,
    "purchaseDate": cItem.date,
    "products": flatten(cItem.products) map ((cpItem, cpIndex) -> {
        (cpItem),
        (flatten(vars.products) filter ($.id == cpItem.productId) map(fItem) -> {
            "title": fItem.title,
            "price": fItem.price,
            "amount": fItem.price * cpItem.quantity
        })
    }),
    "totalAmount": sum(flatten(cItem.products map ((cpItem, cpIndex) -> (flatten(vars.products) filter ($.id == cpItem.productId) map(fItem) -> fItem.price * cpItem.quantity )))),
    "createdDate" : now(), 
    "createdBy" : 'admin'
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="store-carts-into-db-subflow" doc:id="ec561e3e-3a3d-499e-ac07-a5f5c58939ff" name="store-carts-into-db-subflow"/>
		<set-variable value="#[200]" doc:name="Set HTTP Status Code" doc:id="4d42ca42-1706-4c7c-8dc2-e47009b0a91c" variableName="httpStatus" />
		<logger level="INFO" doc:name="INFO End Logger" doc:id="71bb7548-f358-4a67-ad29-bfc4b981787d" message='#["End calling checkout cart transaction"]'/>
	</flow>
	<sub-flow name="get-all-products-subflow" doc:id="18f0d56e-cc0c-4ff4-b023-6e351905c796" >
		<logger level="INFO" doc:name="INFO Start Logger" doc:id="978890ec-975f-4e42-8c0c-847d50b2679e" message='#["Start calling GET All Products request"]'/>
		<try doc:name="Try" doc:id="d86ace1a-efe2-49a6-ae02-e23975b3ef65">
					<http:request method="GET" doc:name="GET All Products" doc:id="49f77581-4abf-44cb-9d4f-8f2806d8da70" config-ref="Fakestore_Product_Request_configuration" path="${fakestore.api.product.path}" sendCorrelationId="ALWAYS" correlationId="#[vars.transactionId]" target="products">
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : p('secure::fakestore.api.client_secret'),
	"client_id" : p('secure::fakestore.api.client_id')
}]]]></http:headers>
		</http:request>
			<error-handler ref="fakestore-error-handler" />
			</try>
		<logger level="INFO" doc:name="INFO End Logger" doc:id="4f1b7570-a1fb-4eb9-8967-90841e303afa" message='#["End calling GET All Products request"]'/>
	</sub-flow>
	<sub-flow name="store-carts-into-db-subflow" doc:id="b6c99b0a-953a-47fb-a3d9-a4b60c8ecd9d" >
		<logger level="INFO" doc:name="INFO Start Logger" doc:id="e78f4027-aebe-4ddb-8980-8887ea0ebc36" message='#["Start storing carts into db"]'/>
		<try doc:name="Try" doc:id="5549fba4-13b5-41be-99ae-a3ea997346bd">
				<fakestore-db-sys-api:store-all-successfull-transaction-database doc:name="Store Products Into Database" doc:id="66f6ea23-83be-4cd6-bd79-23f23cbeab99" x-correlation-id="#[vars.trxId]" config-ref="Fakestore_DB_Sys_API_Config" client-id="${secure::fakestore.api.client_id}" client-secret="${secure::fakestore.api.client_secret}" />
				<error-handler ref="fakestore-error-handler" />
			</try>
		<logger level="INFO" doc:name="INFO End Logger" doc:id="362baa8d-4705-42c7-a7a8-74a8d10cbd1a" message='#["End storing carts into db"]'/>
	</sub-flow>
</mule>
